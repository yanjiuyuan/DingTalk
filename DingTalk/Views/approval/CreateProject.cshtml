@{
    Layout = null;
}

<!--右侧实体内容-->
<div id="partPage">
    <!--标题-->
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        {{FlowName}}-{{nodeInfo.NodeName}}
    </div>
    <!--创建项目表单-->
    <el-form :model="ruleForm" :rules="rules" :inline="true" ref="ruleForm" label-width="120px" class="demo-ruleForm">
        @RenderPage("~/Views/Shared/startForm.cshtml")
    </el-form>
    <el-form :model="tableForm" :rules="rules" ref="tableForm" label-width="130px" class="demo-ruleForm"
             enctype="multipart/form-data">
        <el-form-item label="项目名称" prop="ProjectName">
            <el-input v-model="tableForm.ProjectName"></el-input>
        </el-form-item>
        <el-form-item label="承担部门">
            <el-select v-model="tableForm.DeptName" style="width:300px;">
                <el-option v-for="s of DeptNames" :label="s" :value="s" key="s"></el-option>
            </el-select>
        </el-form-item>
        <el-form-item label="合作单位" prop="Customer">
            <el-input v-model="tableForm.Customer" placeholder="没有填'无'"></el-input>
        </el-form-item>
        <el-form-item label="项目类型" required="required">
            <div class="block">
                <el-cascader v-model="ptypes"
                             :options="PTypes"
                             :props="{ expandTrigger: 'hover' }"
                             v-on:change="handleChange"></el-cascader>
            </div>
        </el-form-item>
        <el-form-item label="项目负责人">
            <el-input v-model="tableForm.ApplyMan" :disabled="true"></el-input>
        </el-form-item>
        <el-form-item label="项目组成员" required="required">
            <el-tag :key="tag.emplId" v-for="tag in groupPeople" closable
                    :disable-transitions="false" v-on:close="handleClose(tag)">
                {{tag.name}}
            </el-tag>
            <el-button class="button-new-tag" size="small" v-on:click="addGroup">+ 添加</el-button>
            @*<span v-for="p in groupPeople">{{p.name}} &nbsp;</span>
            <el-button class="button-new-tag" size="small" v-on:click="addGroup">+ 选择</el-button>*@
        </el-form-item>
        <el-form-item label="项目周期" required="required">
            <el-date-picker v-model="tableForm.Time"
                            type="daterange"
                            :picker-options="pickerOptions" :editable="false"
                            range-separator="至"
                            start-placeholder="开始日期"
                            end-placeholder="结束日期">
            </el-date-picker>
        </el-form-item>
    </el-form>
    <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="130px" class="demo-ruleForm"
             enctype="multipart/form-data">
            <el-form-item label="项目立项书和项目答辩PPT，测试项目上传方案" required="required">
                <el-upload class="upload-demo"
                           drag
                           :file-list="fileList"
                           action="/drawingupload/Upload"
                           :on-remove="HandleFileRemove"
                           :before-upload="BeforeFileUpload"
                           :on-success="HandleFileSuccess" :on-exceed="HandleFileExceed"
                           multiple>
                    <i class="el-icon-upload"></i>
                    <div class="el-upload__text">将文件拖到此处，或<em>点击上传</em></div>
                    <div class="el-upload__tip" slot="tip">单个文件不超过9M</div>
                </el-upload>
            </el-form-item>
            @RenderPage("~/Views/Shared/startButton.cshtml")
        </el-form>
</div>

<script>
    var Index = 0
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                status: ['在研', '已完成', '终止'],
                ResponsibleMan: [{ name: '', emplId: '' }],
                groupPeople: [],
                ptypes: [PTypes[0].label, PTypes[0].children[0].label],
                DeptNames: DeptNames,
                //CompanyNames: CompanyNames,
                tableForm: {
                    ApplyMan: DingData.nickName,
                    ApplyManId: DingData.userid,
                    CompanyName: '泉州华中科技大学智能制造研究院',
                    ProjectName: '',
                    inputProjectId: '',
                    DeptName: '',
                    Customer: '',
                    ProjectName: '',
                    ProjectId: null,
                    Time: ''
                }
            }
        },
        methods: {
            //添加项目
            onSubmit() {
                var that = this
                this.fileListToUrl()
                this.$refs['tableForm'].validate((valid) => {
                    if (valid && this.groupPeople[0].name && this.tableForm.Time[0] && this.ruleForm.FileUrl) {
                        that.disablePage = true
                        let names = []
                        let ids = []
                        for (let p of this.groupPeople) {
                            names.push(p.name)
                            ids.push(p.emplId)
                        }
                        var param = {
                            "CreateTime": _getTime(),
                            "IsEnable": true,
                            "ProjectState": '在研',//this.ruleForm.ProjectState,
                            "IsFinish": false,
                            "ApplyMan": DingData.nickName,
                            "ApplyManId": DingData.userid,
                            "StartTime": this.tableForm.Time[0] ? _dateToString(this.tableForm.Time[0]) : '',
                            "EndTime": this.tableForm.Time[1] ? _dateToString(this.tableForm.Time[1]) : '',
                            "TeamMembers": names.join(','),
                            "TeamMembersId": ids.join(','),
                            "CreateManId": DingData.userid,
                            "CreateMan": DingData.nickName,
                            "ProjectName": this.tableForm.ProjectName,
                            "ProjectId": this.tableForm.inputProjectId,
                            "CompanyName": this.tableForm.CompanyName,
                            "Customer": this.tableForm.Customer,
                            "DeptName": this.tableForm.DeptName,
                            "ProjectType": this.ptypes[0],
                            "ProjectSmallType": this.ptypes[1],
                            "ResponsibleMan": this.ruleForm.ApplyMan,
                            "ResponsibleManId": this.ruleForm.ApplyManId,
                            "ProjectFileUrl": this.ruleForm.FileUrl
                        }
                        let callBack = function (taskId) {
                            param['TaskId'] = taskId
                            that.PostData('CreateProject/Save', param, function (data) {
                                that.$alert('恭喜提交成功', '提示信息', {
                                    confirmButtonText: '确定',
                                    callback: action => {
                                        goHome()
                                    }
                                })
                            })
                        }
                        that.approvalSubmit(callBack)
                    }
                    else {
                        that.$alert('表单信息不全或有误', '提示信息', {
                            confirmButtonText: '确定'
                        })
                    }
                })
            },
            handleChange(value) {
                console.log(value)
                this.ptypes = value
            }
        },
        created: function () {
            this.initStart(() => {
                this.ptypes[0] = this.tableForm.ProjectType
                this.ptypes[1] = this.tableForm.ProjectSmallType
            })
        }
    })


</script>