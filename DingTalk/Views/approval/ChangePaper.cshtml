@{
    Layout = null;
}

<!--右侧实体内容-->

<el-main id="partPage" style="position:relative;margin-left:1%;">
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        图纸变更-{{nodeInfo.NodeName}}
    </div>
    <div>
        <span>项目名称</span>
        <el-select v-model="ProjectId" placeholder="请选择" style="width:400px;" v-on:change="selectProject">
            <el-option v-for="item in projectList"
                       :key="item.ProjectId"
                       :label="item.ProjectName"
                       :value="item.ProjectId">
                <span style="float: left">{{ item.ProjectName }}  -编号: {{item.ProjectId}}</span>
                <span style="float: right; color: #8492a6; font-size: 13px"></span>
            </el-option>
        </el-select>
        <span>图纸用途</span>
        <el-select v-model="ProjectType">
            <el-option v-for="s of ProjectTypes" :label="s" :value="s" key="s"></el-option>
        </el-select>
        <el-button v-on:click="search">搜索</el-button>
    </div>
    <!--表格實體-->
    <h3>待删除图纸Bom列表</h3>
    <el-table :data="allData" stripe border>
        <el-table-column prop="BomId" label="BOM" style="width:250px;">
        </el-table-column>
        <el-table-column prop="DrawingNo" label="图纸编号">
        </el-table-column>
        <el-table-column prop="Name" label="部件名称">
        </el-table-column>
        <el-table-column prop="Sorts" label="部件类别">
        </el-table-column>
        <el-table-column label="操作">
            <template slot-scope="scope">
                <el-button size="mini" type="danger" v-on:click="deleteDevice(scope.$index, scope.row)">删除</el-button>
                <span style="color:red;" v-if="scope.row.isDelete">已删除</span>
                <span style="color:green;" v-else>保留</span>
            </template>
        </el-table-column>
    </el-table>
    <template v-for="(d,index) in dataArr">
        <!--表格實體-->
        <el-table :data="d.tableData" stripe border>
            <el-table-column v-for="(value,key) in d.items" :prop="key" :label="value" :key="key">
            </el-table-column>
        </el-table>
        <!--底部翻頁-->
        <div style="text-align:right">
            <el-pagination v-on:current-change="handleBomPageChange($event,index)"
                           :current-page="d.currentPage"
                           :page-sizes="[5]"
                           :page-size="5"
                           layout="total, sizes, prev, pager, next, jumper"
                           :total="d.totalRows">
            </el-pagination>
        </div>
        <!--上传表單-->
        <el-upload class="upload-demo"
                   action="/drawingupload/UploadAndGetInfo"
                   :on-success="handleSuccess"
                   @*:before-remove="beforeRemove"*@
                   :before-upload="beforeExcelUpload"
                   multiple
                   :limit="1"
                   :on-exceed="handleExceed"
                   :file-list="excelList">
            <el-button size="small" type="primary" v-on:click="bomIndex = index">上传{{d.Sorts}}件</el-button>
            <div slot="tip" class="el-upload__tip">只能上传excel文件，且不超过500kb</div>
        </el-upload>
        @*</el-form-item>*@
    </template>
    <hr />
    <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="110px" class="demo-ruleForm"
             id="uploadForm" enctype="multipart/form-data">
        <el-form-item label="标题" prop="Title">
            <el-input v-model="ruleForm.Title"></el-input>
        </el-form-item>
        <el-form-item label="申请人" prop="name">
            <el-input v-model="ruleForm.name" :disabled="true"></el-input>
        </el-form-item>
        <el-form-item label="项目名称" prop="ProjectName">
            <el-input v-model="ruleForm.ProjectName" :disabled="true"></el-input>
        </el-form-item>
        <el-form-item label="建议" prop="remark">
            <el-input v-model="ruleForm.remark"></el-input>
        </el-form-item>
        <el-form-item label="上传PDF图纸" required="required">
            <el-upload class="upload-demo"
                       drag
                       :file-list="pdfList"
                       action="/drawingupload/Upload"
                       :on-remove="handlePdfFileRemove"
                       :before-upload="beforePdfFileUpload"
                       :on-success="handlePdfFileSuccess"
                       multiple>
                <i class="el-icon-upload"></i>
                <div class="el-upload__text">将文件拖到此处，或<em>点击上传</em></div>
                <div class="el-upload__tip" slot="tip">不超过30M</div>
            </el-upload>
        </el-form-item>

        <el-form-item label="上传其他附件">
            <el-upload class="upload-demo"
                       drag
                       :file-list="fileList"
                       action="/drawingupload/Upload"
                       @*:on-remove="handleFileRemove"
                       :before-upload="beforeFileUpload"
                       :on-success="HandleFileSuccess"*@
                       multiple>
                <i class="el-icon-upload"></i>
                <div class="el-upload__text">将文件拖到此处，或<em>点击上传</em></div>
                <div class="el-upload__tip" slot="tip">不超过30M</div>
            </el-upload>
        </el-form-item>
        <!--添加审批人-->
        <sam-approver-list :nodeList="nodeList" :nodedata="nodeInfo" :single="true">
        </sam-approver-list>
        <el-form-item>
            <el-button type="primary" v-on:click="onSubmit('ruleForm')" :disabled="disablePage">提交</el-button>
            <el-button v-on:click="resetForm('ruleForm')">重置</el-button>
        </el-form-item>
    </el-form>
</el-main>

<script>
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                nodeInfo: {},
                nodeList: [],
                allData: [],
                data: [],
                projectList: [],
                fileList: [],
                pdfList: [],
                excelList: [],
                //表单参数
                ProjectId: '',
                ProjectName: '',
                ProjectTypes: ['电气采购', '机械加工', '机械采购', '其他'],
                ProjectType: '机械加工',
                dataArr: [
                    {
                        data: [],
                        tableData: [],
                        Sorts: '标准',
                        currentPage: 1,
                        totalRows: 0,
                        items: {}
                    },
                    {
                        data: [],
                        tableData: [],
                        Sorts: '自制',
                        currentPage: 1,
                        totalRows: 0,
                        items: {}
                    },
                    {
                        data: [],
                        tableData: [],
                        Sorts: '外购',
                        currentPage: 1,
                        totalRows: 0,
                        items: {}
                    }],
                ruleForm: {
                    name: DingData.nickName,
                    Dept: DingData.departName,
                    remark: '',
                    FileUrl: '',
                    OldFilePDFUrl: '',
                    FilePDFUrl: '',
                    OldFileUrl: '',
                    MediaId: '',
                    MediaIdPDF: '',
                    ProjectName: '',
                    Title: '',
                    ProjectId: null,
                    Time: ''
                }
            }
        },
        methods: {
            //提交审批
            onSubmit(formName) {
                var that = this
                this.approvalSubmit('ruleForm', this.ruleForm, function (taskId) {
                    that.bindData(taskId)
                })
            },
            search() {
                if(!this.ProjectName){
                    this.$alert('请选择项目名称', '提交错误')
                    return
                }
                this.GetData('/DrawingChange/Query' + _formatQueryStr({
                    ProjectName: this.ProjectName, ProjectType: this.ProjectType
                }), (result) => {
                    this.allData = result
                })
            },
            deleteDevice(index, row) {
                console.log(row)
                row['ChangeType'] ? row['ChangeType'] = 0 : row['ChangeType'] = 2
            },
            selectProject(id) {
                for (var project of this.projectList) {
                    if (project.ProjectId == id) {
                        this.ruleForm.Title = project.ProjectName + ' - 编号：' + project.ProjectId
                        this.ruleForm.ProjectName = project.ProjectName 
                        this.ruleForm.ProjectId = project.ProjectId
                    }
                }
            },
            //审批绑定BOM表数据
            bindData(taskId) {
                var that = this
                for (let d of this.data) {
                    d.TaskId = taskId
                }
                this._postData("/PurchaseOrder/Save", function (data) {
                    console.log("审批绑定BOM表数据ok")
                    console.log(JSON.stringify(that.data))
                    console.log(data)
                    that.doneSubmit()
                }, that.data)
            },
            //图纸审批相关方法、、、、、、、、、、、、、、、、、、、、
            //bom表格翻页
            handleBomPageChange(page, index) {
                console.log(page)
                console.log(index)
                this.currentPage = page
                this.dataArr[index].currentPage = page
                this.getData()
                this.dataArr[index].tableData = _cloneArr(this.tableData)
            },
            //上传文件方法
            handleSuccess(response, file, fileList) {
                console.log(response)
                var tableData = response[0].Value
                this.currentPage = 1
                let BomId = ''
                if (!(tableData && tableData.length > 0)) return
                this.data = []
                for (let i = 0; i < tableData.length; i++) {
                    let data = tableData[i]
                    if (i == 0) {
                        this.items = {}
                        for (let c in data) {
                            if (c.substring(0, 6) == 'Column') {
                                this.items[c] = data[c]
                                this.dataArr[this.bomIndex].items[c] = data[c]
                            }
                            else if (c.length > 10) {
                                BomId = c
                            }
                        }
                    } else {
                        if (data['Column1'] && data['Column1'] != "") {
                            this.dataArr[this.bomIndex].data.push(data)
                            this.data.push(data)
                            upBom.push({
                                BomId: BomId,
                                DrawingNo: data.Column1,
                                Name: data.Column2,
                                Count: data.Column3,
                                MaterialScience: data.Column4,
                                Unit: data.Column5,
                                SingleWeight: data.Column6,
                                AllWeight: data.Column7,
                                NeedTime: data.Column8,
                                Mark: data.Column9,
                                Sorts: this.dataArr[this.bomIndex].Sorts
                            })
                        }
                    }
                }
                console.log(tableData)
                //this.totalRows = this.data.length
                this.dataArr[this.bomIndex].totalRows = this.dataArr[this.bomIndex].data.length
                this.getData()
                this.dataArr[this.bomIndex].tableData = this.tableData
            },
            handleExceed(files, fileList) {
                this.$message.warning(`当前限制选择 1 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`);
            },

            beforePdfFileUpload(file) {
                console.log('before pdf')
                console.log(file)
                if (file.name.indexOf(' ') >= 0) {
                    this.$alert('文件名不能带空格', '上传失败', {
                        confirmButtonText: '确定',
                    });
                    return false
                }
                file.name = 'helloWorld'
                const isPdfType = file.type === 'application/pdf'
                const isLt2M = file.size / 1024 / 1024 < 10
                if (!isPdfType) {
                    this.$message.error('上传图片只能是 PDF 格式!')
                    return false
                }
                if (!isLt2M) {
                    this.$message.error('上传文件大小不能超过 10MB!')
                    return false
                }
                return true
            },
            HandlePdfFileRemove(file, fileList) {
                this.pdfList = _cloneArr(fileList)
            },
            handlePdfFileSuccess(response, file, fileList) {
                var that = this
                const loading = this.$loading({
                    lock: true,
                    text: 'Loading',
                    spinner: 'el-icon-loading',
                    background: 'rgba(0, 0, 0, 0.7)'
                });
                var paramObj = {
                    "": file.response.Content
                }
                $.ajax({
                    url: '/DingTalkServers/UploadMedia/',
                    type: 'POST',
                    data: paramObj,
                    success: function (data) {
                        data = JSON.parse(data)
                        console.log('上传文件到钉盘')
                        console.log('/api/dt/uploadMedia/')
                        console.log(paramObj)
                        if (data.media_id) {
                            console.log(data.media_id)
                            that.mediaPdfList.push(data.media_id)
                        } else {
                            console.log('无media_di')
                        }
                        that.pdfList = _cloneArr(fileList)
                        loading.close()
                    }
                })
            },
        },
        created: function () {
            //FlowId = 8
            this.getNodeInfo()
            this.getProjects()
            this.getApproInfo()
            loadHtml("mainPage", "partPage")
        }
    })

</script>


