@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <!--标题-->
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        {{ruleForm.Title}}
    </div>
    <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="120px" class="demo-ruleForm" :inline="true">
        <!--表格實體-->
        <h1>当前加工进度表</h1>
        <el-table :data="tableData" stripe border
                  style="width: 100%">
            <el-table-column prop="CodeNo" type="index"></el-table-column>
            <el-table-column v-for="con in tableConfig" v-if="con.upLabel == 't1'" :prop="con.param" width="150" :label="con.label"></el-table-column>
            <el-table-column label="资料接收时间">
                <el-table-column v-for="con in tableConfig" v-if="con.upLabel == '资料接收时间'" :prop="con.param" width="150" :label="con.label"></el-table-column>
            </el-table-column>
            <el-table-column v-for="con in tableConfig" v-if="con.upLabel == 't2'" :prop="con.param" width="150" :label="con.label"></el-table-column>
            <el-table-column label="零件加工">
                <el-table-column v-for="con in tableConfig" v-if="con.upLabel == '零件加工'" :prop="con.param" width="150" :label="con.label"></el-table-column>
            </el-table-column>
            <el-table-column v-for="con in tableConfig" v-if="con.upLabel == 't3'" :prop="con.param" width="150" :label="con.label"></el-table-column>
            <el-table-column label="组装">
                <el-table-column v-for="con in tableConfig" v-if="con.upLabel == '组装'" :prop="con.param" width="150" :label="con.label"></el-table-column>
            </el-table-column>
            <el-table-column v-for="con in tableConfig" v-if="con.upLabel == 't4'" :prop="con.param" width="150" :label="con.label"></el-table-column>
        </el-table>
        <el-upload class="upload-demo"
                   action="/drawingupload/UploadAndGetInfo"
                   :on-success="handleSuccess"
                   :before-upload="beforeExcelUpload"
                   multiple
                   :limit="1"
                   :file-list="excelList">
            <el-button size="small" type="primary">上传excel</el-button>
            <div slot="tip" class="el-upload__tip">只能上传excel文件，且不超过500kb</div>
        </el-upload>
        <el-button size="mini" type="primary" v-on:click="downloadFile(mediaId)" :disabled="disablePage">下载模板</el-button>
        <hr />
        <h1>添加一条进度 </h1>
        <el-table :data="inputTable" stripe border
                  style="width: 100%">
            <el-table-column label="操作">
                <template slot-scope="scope">
                    <el-button size="mini" v-on:click="addGood(scope.$index, scope.row)">添加</el-button>
                </template>
            </el-table-column>
            <el-table-column v-for="con in tableConfig" v-if="con.upLabel == 't1'" :prop="con.param" width="150" :label="con.label">
                <template slot-scope="scope">
                    <el-input v-model="scope.row[con.param]"></el-input>
                </template>
            </el-table-column>
            <el-table-column label="资料接收时间">
                <el-table-column v-for="con in tableConfig" v-if="con.upLabel == '资料接收时间'" :prop="con.param" width="150" :label="con.label">
                    <template slot-scope="scope">
                        <el-input v-model="scope.row[con.param]"></el-input>
                    </template>
                </el-table-column>
            </el-table-column>
            <el-table-column v-for="con in tableConfig" v-if="con.upLabel == 't2'" :prop="con.param" width="150" :label="con.label">
                <template slot-scope="scope">
                    <el-input v-model="scope.row[con.param]"></el-input>
                </template>
            </el-table-column>
            <el-table-column label="零件加工">
                <el-table-column v-for="con in tableConfig" v-if="con.upLabel == '零件加工'" :prop="con.param" width="150" :label="con.label">
                    <template slot-scope="scope">
                        <el-input v-model="scope.row[con.param]"></el-input>
                    </template>
                </el-table-column>
            </el-table-column>
            <el-table-column v-for="con in tableConfig" v-if="con.upLabel == 't3'" :prop="con.param" width="150" :label="con.label">
                <template slot-scope="scope">
                    <el-input v-model="scope.row[con.param]"></el-input>
                </template>
            </el-table-column>
            <el-table-column label="组装">
                <el-table-column v-for="con in tableConfig" v-if="con.upLabel == '组装'" :prop="con.param" width="150" :label="con.label">
                    <template slot-scope="scope">
                        <el-input v-model="scope.row[con.param]"></el-input>
                    </template>
                </el-table-column>
            </el-table-column>
            <el-table-column v-for="con in tableConfig" v-if="con.upLabel == 't4'" :prop="con.param" width="150" :label="con.label">
                <template slot-scope="scope">
                    <el-input v-model="scope.row[con.param]"></el-input>
                </template>
            </el-table-column>
        </el-table>
        @*<el-table :data="tableData" stripe border>
            <el-table-column prop="CodeNo" type="index"></el-table-column>
            <el-table-column label="操作">
                <template slot-scope="scope">
                    <el-button size="mini" type="danger" v-on:click="deleteGood(scope.$index, scope.row)">删除</el-button>
                </template>
            </el-table-column>
            <el-table-column v-for="(value,key) in allConfig" v-if="needInput.indexOf(key) >=0" :prop="key" :label="value" :key="key" :style="{width:lengthConfig[key]+'px'}">
                <template slot-scope="scope">
                    <el-input v-model="scope.row[key]" :class="{redborder:!scope.row[key]}"></el-input>
                </template>
            </el-table-column>
            <el-table-column v-for="(value,key) in allConfig" v-if="needInput.indexOf(key) <0" :prop="key" :label="value" :key="key" :style="{width:lengthConfig[key]+'px'}">
                <template slot-scope="scope">
                    <el-input v-model="scope.row[key]"></el-input>
                </template>
            </el-table-column>
        </el-table>*@
        <!--上传表單-->


    </el-form>
</el-main>

<script>
    let a = 'DesignerId,设计员Id  HeadOfDepartmentsId,部门负责人Id   NoteTakerId,记录人Id ,TabulatorId,制表人Id  Tabulator,制表人'
    let tableConfig = {
        Column1: { param: 'CompanyName', label: '单位', upLabel: 't1' },
        Column2: { param: 'ProjectType', label: '大类别', upLabel: 't1' },
        Column3: { param: 'ProjectSmallType', label: '小类别', upLabel: 't1'},
        Column4: { param: 'Remark1', label: '备注', upLabel: 't1' },
        Column5: { param: 'ProjectId', label: '项目编码', upLabel: 't1'},
        Column6: { param: 'ProjectName', label: '项目名称', upLabel: 't1'},
        Column7: { param: 'TaskId', label: '流水号', upLabel: 't1'},
        Column8: { param: 'Bom', label: 'bom', upLabel: 't1'},
        Column9: { param: 'AccountKeeping', label: '走账', upLabel: 't1'},
        Column10: { param: 'Designer', label: '设计员', upLabel: 't1' },
        //资料接收时间
        Column11: { param: 'BomTime', label: 'BOM', upLabel: '资料接收时间' },
        Column12: { param: 'TwoD', label: '2D', upLabel: '资料接收时间' },
        Column13: { param: 'ThreeD', label: '3D', upLabel: '资料接收时间' },

        Column14: { param: 'NeedTime', label: '需求时间', upLabel: 't2' },
        Column15: { param: 'NeedCount', label: '需求数量', upLabel: 't2'},
        Column16: { param: 'ScheduledDate', label: '预计开工时间', upLabel: 't2' },
        Column17: { param: 'CompletionTime', label: '预计完成时间', upLabel: 't2' },
        Column18: { param: 'BeginTime', label: '开始时间', upLabel: 't2' },
        //零件加工
        Column19: { param: 'HomemadeNumberZZ', label: '自制数（件）', upLabel: '零件加工' },
        Column20: { param: 'ProcessingTimeZZ', label: '加工时间（天）', upLabel: '零件加工' },
        Column21: { param: 'ProgressNumberZZ', label: '进度（件）', upLabel: '零件加工' },
        Column22: { param: 'ExternalNumberYX', label: '外协数（件）', upLabel: '零件加工' },
        Column23: { param: 'ProcessingTimeYX', label: '加工时间（天）', upLabel: '零件加工' },
        Column24: { param: 'SpeedOfProgress', label: '进度', upLabel: '零件加工' },

        Column25: { param: 'ActualCompletionTime', label: '实际加工完成时间', upLabel: 't3' },
        //组装
        Column26: { param: 'Assemble', label: '组装（%）', upLabel: '组装' },
        Column27: { param: 'Debugging', label: '调试（%）', upLabel: '组装' },
        Column28: { param: 'ProgressStatement', label: '进度说明', upLabel: '组装' },

        Column29: { param: 'Remark2', label: '备注', upLabel: 't4'},
        Column30: { param: 'HeadOfDepartments', label: '部门负责人', upLabel: 't4' },
        Column31: { param: 'NoteTaker', label: '记录人', upLabel: 't4' },
        //Column32: '设计员确认收货',
        Column33: { param: 'Remark3', label: '备注', upLabel: 't4' },
        Column34: { param: 'Tabulator', label: '图纸审核员', upLabel: 't4'}
    }
    let initTable = {}
    for (let con in tableConfig) {
        initTable[tableConfig[con].param] = ''
    }
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                mediaId: '@@lAvPDeC2t8bqmM3OExReeM5jC3b9',
                tableConfig: tableConfig,
                excelList: [],
                data: [],
                tableData: [],
                inputTable: [initTable],
                ruleForm: {
                    name: DingData.nickName,
                   
                }
            }
        },
        methods: {
            onSubmit(formName) {
 
                //if (this.tableData.length == 0) {
                //    this.addGoods()
                //    if (this.tableData.length == 0) {
                //        this.elementAlert('提示信息', '未添加编码')
                //        return
                //    }
                //}
                //for (var i = 0; i < this.tableData.length;i++) {
                //    let d = this.tableData[i]
                //    if (!d.BigCode || !d.BigCode || !d.Name || !d.Standard || !d.BigCodeName || !d.SmallCodeName) {
                //        this.elementAlert('提示信息', '第 ' + (i+1) + ' 表单未填写完整')
                //        return
                //    }
                //}
                
            },
            //添加加工进度
            addGood(index, good) {
                console.log(good)
                let param = {
                    applyManId: DingData.userid,
                    applyMan: DingData.nickName,
                    CompanyId: 0,
                    IsExcelUpload: false,
                    processingProgresses: good
                }
                this.PostData('ProcessingProgress/Save', param, (res) => {
                    this.$alert('保存成功', '提示');
                    this.getTable()
                })
            },
            //上传EXCEL进度表，并保存数据
            handleSuccess(response, file, fileList) {
                //this.tableData = []
                console.log(response)
                let tmpData = []
                for (let i = 2; i < response[0].Value.length; i++) {
                    tmpData.push(response[0].Value[i])
                }
                for (let t of tmpData) {
                    for (let c in t) {
                        if (tableConfig[c]) {
                            t[tableConfig[c].param] = t[c]
                            delete t[c]
                        }
                    }
                }
                let param = {
                    applyManId: DingData.userid,
                    applyMan: DingData.nickName,
                    CompanyId: 0,
                    IsExcelUpload: true,
                    processingProgresses: tmpData
                }
                const loading = this.$loading({
                    lock: true,
                    text: 'Loading',
                    spinner: 'el-icon-loading',
                    background: 'rgba(0, 0, 0, 0.7)'
                });
                this.PostData('ProcessingProgress/Save', param, (res) => {
                    loading.close()
                    this.$alert('保存成功', '提示');
                    this.getTable()
                }, (res) => { loading.close() })
            },
            //获取bom数据
            getTable() {
                this.GetData('ProcessingProgress/Read?applyManId=' + DingData.userid, (res) => {
                    this.tableData = res
                })
            }
        },
        created: function () {
            this.getTable()
            loadHtml("mainPage", "partPage")
        }
    })

</script>
