@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <!--标题-->
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        {{ruleForm.Title}}-{{nodeInfo.NodeName}}
    </div>
    <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="120px" class="demo-ruleForm" :inline="true">

        <el-form-item label="申请人" prop="name">
            <el-input v-model="ruleForm.name" disabled></el-input>
        </el-form-item>
        <el-form-item label="标题" prop="Title">
            <el-input v-model="ruleForm.Title" style="width:600px;"></el-input>
        </el-form-item>
        <el-form-item label="建议" prop="remark">
            <el-input v-model="ruleForm.remark" style="width:600px;"></el-input>
        </el-form-item>
        <el-form-item lable="编码类型">
            <el-radio-group v-model="ruleForm.codeType" v-on:change="changeCodeType">
                <el-radio label="1">零部件</el-radio>
                <el-radio label="2">办公用品</el-radio>
            </el-radio-group>
            <span style="color:red;"> 切换编码类型会清空已填编码！！！</span>
        </el-form-item>

        <!--表格實體-->
        <el-table :data="tableData" stripe border>
            <el-table-column prop="CodeNo" type="index"></el-table-column>
            <el-table-column label="操作">
                <template slot-scope="scope">
                    <el-button size="mini" type="danger" v-on:click="deleteGood(scope.$index, scope.row)">删除</el-button>
                </template>
            </el-table-column>

            <el-table-column v-for="(value,key) in allConfig" v-if="needInput.indexOf(key) >=0" :prop="key" :label="value" :key="key" :style="{width:lengthConfig[key]+'px'}">
                <template slot-scope="scope">
                    <sam-input :value.sync="scope.row[key]" :required="true"></sam-input>
                    @*<el-input v-model="scope.row[key]" :class="{redborder:!scope.row[key]}"></el-input>*@
                </template>
            </el-table-column>
            <el-table-column v-for="(value,key) in allConfig" v-if="needInput.indexOf(key) <0" :prop="key" :label="value" :key="key" :style="{width:lengthConfig[key]+'px'}">
                <template slot-scope="scope">
                    <sam-input :value.sync="scope.row[key]"></sam-input>
                    @*<el-input v-model="scope.row[key]"></el-input>*@
                </template>
            </el-table-column>

            @*<el-table-column v-for="(value,key) in allConfig" :prop="key" :label="value" :key="key" :style="{width:lengthConfig[key]+'px'}">
                <template slot-scope="scope">
                    <el-input v-model="scope.row[key]"></el-input>
                </template>
            </el-table-column>*@
        </el-table>
        <!--上传表單-->
        <el-upload class="upload-demo"
                   action="/drawingupload/UploadAndGetInfo"
                   :on-success="handleSuccess"
                   :before-upload="beforeExcelUpload"
                   multiple
                   :limit="1"
                   :file-list="excelList">
            <el-button size="small" type="primary">上传excel</el-button>
            <div slot="tip" class="el-upload__tip">只能上传excel文件，且不超过500kb</div>
        </el-upload>
        <el-button size="mini" type="primary" v-on:click="downloadFile(mediaId)" :disabled="disablePage">下载模板</el-button>
        <hr />
        <!--物料明细-->
        <template v-for="(good,index) in ruleForm.goods">
            <el-form-item label="物料大类" :rules="{ required: true, message: '物料大类不能为空', trigger: 'blur'}"
                          :prop="'goods.' + index + '.BigCode'">
                <el-select v-model="good.BigCode" :data="index" filterable placeholder="请选择" v-on:change="changeBigCode(good)">
                    <el-option v-for="item in bigCodes"
                               :key="item.materialCodeNumber"
                               :label="item.materialCodeNumber + ' - ' + item.materialName"
                               :value="item.materialCodeNumber">
                    </el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="物料小类" :rules="{ required: true, message: '物料小类不能为空', trigger: 'blur'}"
                          :prop="'goods.' + index + '.SmallCode'">
                <el-select v-model="good.SmallCode" filterable placeholder="请选择" v-on:change="changeSmallCode(good)">
                    <el-option v-for="item in good.smallMaterialCodes"
                               :key="item.materialCodeNumber"
                               :label="item.materialCodeNumber + ' - ' + item.materialName"
                               :value="item.materialCodeNumber">
                    </el-option>
                </el-select>
            </el-form-item>
            <el-form-item v-for="(g,gk) in good" :key="gk" v-if="needInput.indexOf(gk) >=0 && meterielConfig[gk]"
                          :label="meterielConfig[gk]" :rules="{ required: true, message: meterielConfig[gk]+'不能为空', trigger: 'blur'}"
                          :prop="'goods.' + index + '.' + gk">
                <el-input v-model="good[gk]"></el-input>
            </el-form-item>
            <el-form-item v-for="(g,gk) in good" :key="gk" v-if="needInput.indexOf(gk) <0 && meterielConfig[gk]"
                          :label="meterielConfig[gk]">
                <el-input v-model="good[gk]"></el-input>
            </el-form-item>
        </template>
        @*<p class="hint">如需添加申请项，请点击“添加明细”</p>*@
        <el-button v-on:click="addGoods" type="primary" plain> + 添加编码</el-button>
        <hr />
        <!--添加审批人-->
        <sam-approver-list :nodeList="nodeList" :single="true" :nodedata="nodeInfo"></sam-approver-list>

        <el-form-item>
            <el-button type="primary" v-on:click="onSubmit('ruleForm')" :disabled="disablePage">提交</el-button>
            <el-button type="primary" v-on:click="saveTempData">临时保存</el-button>
        </el-form-item>
    </el-form>
</el-main>

<script>
    var meterielConfig = {
        Name: '物料名称',
        Unit: '单位',
        Standard: '规格型号',
        SurfaceTreatment: '表面处理',
        PerformanceLevel: '性能等级',
        StandardNumber: '标准号',
        Features: '典型特征',
        purpose: '用途',
        Remark: '备注'
    }
    var allConfig = _cloneObj(meterielConfig)
    var configDictionary = {}
    allConfig['BigCodeName'] = '大类名称'
    allConfig['BigCode'] = '大类编码'
    allConfig['SmallCodeName'] = '小类名称'
    allConfig['SmallCode'] = '小类编码'
    for (let c in allConfig) {
        configDictionary[allConfig[c]] = c
    }
    var meteriel = {}
    var lengthConfig = {}
    for (let m in meterielConfig) {
        meteriel[m] = ''
        switch (m) {
            case 'Unit': case 'BigCode': case 'SmallCode': case 'PerformanceLevel': case 'Features': lengthConfig[m] = 100; break;
            default: lengthConfig[m] = '';
        }
    } 
    meteriel['BigCode'] = ''
    meteriel['SmallCode'] = ''
    meteriel['smallMaterialCodes'] = []
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                mediaId: '@@lAvPDeC2t8bqmM3OExReeM5jC3b9',
                nodeList: [],
                nodeInfo: {},
                excelList: [],
                allConfig: allConfig,
                lengthConfig: lengthConfig,
                meterielConfig: meterielConfig,
                meteriel: meteriel,
                needInput: ['BigCode', 'SmallCode', 'BigCodeName', 'SmallCodeName', 'Name', 'Standard', 'Unit', 'Remark'],
                bigCodes: [{
                    materialCodeNumber: 1,
                    materialName:''
                }],
                ruleForm: {
                    codeType: '1',
                    name: DingData.nickName,
                    remark: '',
                    Title: '物料编码申请',
                    goods: [_cloneObj(meteriel)]
                }
            }
        },
        methods: {
            onSubmit(formName) {
                console.error(this.tableData)
                if (this.tableData.length == 0) {
                    this.addGoods()
                    if (this.tableData.length == 0) {
                        this.elementAlert('提示信息', '未添加编码')
                        return
                    }
                }
                for (var i = 0; i < this.tableData.length;i++) {
                    let d = this.tableData[i]
                    if (!d.BigCode || !d.BigCode || !d.Name || !d.Standard || !d.BigCodeName || !d.SmallCodeName) {
                        this.elementAlert('提示信息', '第 ' + (i+1) + ' 表单未填写完整')
                        return
                    }
                }
                //this.PostData('ItemCodeAdd/CheckItemCode', this.tableData, (res) => {
                //    this.data = res
                //    for (let i = 0; i < res.length; i++) {
                //        if (!res[i].IsQualified) {
                //            this.elementAlert('提示信息', '第 ' + (i+1) + '行物料编码大类小类输入有误')
                //            return
                //        }
                //    }
                    this.approvalSubmit(formName, {
                        Title: this.ruleForm.Title,
                        Remark: this.ruleForm.remark
                    }, this.bindAll)
                //})
            },
            bindAll(taskId) {
                var that = this
                var paramArr = []
                for (let p of this.tableData) {
                    p.TaskId = taskId
                    paramArr.push(p)
                }
                //console.log(JSON.stringify(paramArr))
                $.ajax({
                    url: '/ItemCodeAdd/TableSave',
                    contentType: 'application/json; charset=utf-8',
                    type: 'POST',
                    dataType: "json",
                    data: JSON.stringify(paramArr),
                    success: function (data) {
                        console.log(data)
                        var alertStr = '物料编码审批提交成功'
                        if (data.errorCode != 0) alertStr = data.errorMessage
                        that.doneSubmit(alertStr)
                    }
                })
            },

            //上传文件方法
            handleSuccess(response, file, fileList) {
                //this.tableData = []
                for (let d of response[0].Value) {
                    let tmpData = {}
                    for (let s in d) {
                        tmpData[configDictionary[s]] = d[s]
                    }
                    this.tableData.push(tmpData)
                }
                return
                for (let i = 0; i < tableData.length; i++) {
                    let data = tableData[i]
                    if (i != 0 && data['Column1'] && data['Column1'] != "") {
                        this.tableData.push(data)
                    }
                }
            },
            //添加编码
            addGoods() {
                if (!this.ruleForm.goods[0].BigCode || !this.ruleForm.goods[0].BigCode || !this.ruleForm.goods[0].Name || !this.ruleForm.goods[0].Standard) {
                    this.elementAlert('提示信息', '表单未填写完整')
                    return
                }
                this.tableData.push(_cloneObj(this.ruleForm.goods[0]))
                //原方法
                return
                this.ruleForm.goods.push(_cloneObj(meteriel))
            },
            editGood(index, row) {

            },
            deleteGood(index) {
                this.tableData.splice(index, 1)
            },

            //切换编码类型
            changeCodeType(e) {
                console.log(e)
                this.tableData = []
                this.getMaterielCode()
                this.ruleForm.goods = []
                this.ruleForm.goods.push(_cloneObj(meteriel))
            },
            //获取物料编码
            getMaterielCode() {
                var that = this
                let url = ''
                this.ruleForm.codeType == '2' ? url = jinDomarn + 'OfficeSupply/ReadType' : url = '/ItemCodeAdd/GetAllMaterialCode'
                if (this.ruleForm.codeType == '2') {
                    that.bigCodes = [
                        {
                            "materialCodeNumber": "60",
                            "materialName": "办公用品",
                            "smallMaterialCodes": [
                                {
                                    "materialCodeNumber": "000",
                                    "materialName": "文件档案管理类"
                                },
                                {
                                    "materialCodeNumber": "001",
                                    "materialName": "桌面用品"
                                },
                                {
                                    "materialCodeNumber": "002",
                                    "materialName": "办公本薄"
                                },
                                {
                                    "materialCodeNumber": "003",
                                    "materialName": "书写修正用品"
                                },
                                {
                                    "materialCodeNumber": "004",
                                    "materialName": "财务用品"
                                },
                                {
                                    "materialCodeNumber": "005",
                                    "materialName": "辅助用品"
                                },
                                {
                                    "materialCodeNumber": "006",
                                    "materialName": "电脑周边用品"
                                },
                                {
                                    "materialCodeNumber": "040",
                                    "materialName": "打印耗材"
                                },
                                {
                                    "materialCodeNumber": "041",
                                    "materialName": "装订耗材"
                                },
                                {
                                    "materialCodeNumber": "042",
                                    "materialName": "办公用纸"
                                },
                                {
                                    "materialCodeNumber": "043",
                                    "materialName": "IT耗材"
                                },
                                {
                                    "materialCodeNumber": "080",
                                    "materialName": "日用品"
                                },
                                {
                                    "materialCodeNumber": "081",
                                    "materialName": "清洁用品"
                                },
                                {
                                    "materialCodeNumber": "120",
                                    "materialName": "事务设备"
                                },
                                {
                                    "materialCodeNumber": "121",
                                    "materialName": "IT设备"
                                },
                                {
                                    "materialCodeNumber": "122",
                                    "materialName": "办公电器"
                                },
                                {
                                    "materialCodeNumber": "160",
                                    "materialName": "办公家具"
                                }
                            ]
                        }
                    ]
                    return
                }
                
                this._getData(url, function (res) {
                    that.bigCodes = res.data
                    //that.loadReApprovalData()
                })
            },
            //选择大类获取小类
            changeBigCode(good) {
                for (let c of this.bigCodes) {
                    if (c.materialCodeNumber == good.BigCode) {
                        good['BigCodeName'] = c.materialName
                        good.smallMaterialCodes = c.smallMaterialCodes
                    }
                }
            },
            //选择小类
            changeSmallCode(good) {
                for (let c of this.bigCodes) {
                    for (let s of c.smallMaterialCodes) {
                        if (c.materialCodeNumber == good.BigCode && s.materialCodeNumber == good.SmallCode) {
                            good['SmallCodeName'] = s.materialName
                        }
                    }
                }
                let a = this.ruleForm.goods[0].Remark
                this.ruleForm.goods[0].Remark = Math.random() + ''
                this.ruleForm.goods[0].Remark = a
            },
            //加载重新发起审批传递的数据
            loadReApprovalData() {
                if (!ReApprovalTempData.valid) return
                ReApprovalTempData.valid = false
                this.tableData = ReApprovalTempData.data
            },
            //显示临时保存数据
            saveTempData() {
                this.saveData(this.tableData)
                this.elementAlert('提示信息', '保存成功')
            },
            loadTempData() {
                if (this.loadData()) this.tableData = this.loadData()
            },
        },
        created: function () {
            this.getNodeInfo()
            this.getApproInfo()
            this.getMaterielCode()
            this.loadTempData()
            this.loadReApprovalData()
            loadHtml("mainPage", "partPage")
        }
    })

</script>
