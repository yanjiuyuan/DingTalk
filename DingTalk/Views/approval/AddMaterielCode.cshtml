@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <!--标题-->
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        物料编码审批-{{nodeInfo.NodeName}}
    </div>
    <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="120px" class="demo-ruleForm" :inline="true">

        <el-form-item label="申请人" prop="name">
            <el-input v-model="ruleForm.name" disabled></el-input>
        </el-form-item>
        <el-form-item label="标题" prop="Title">
            <el-input v-model="ruleForm.Title" style="width:600px;"></el-input>
        </el-form-item>
        <el-form-item label="建议" prop="remark">
            <el-input v-model="ruleForm.remark" style="width:600px;"></el-input>
        </el-form-item>
        <el-form-item lable="编码类型">
            <el-radio-group v-model="ruleForm.codeType" v-on:change="changeCodeType">
                <el-radio label="1">办公用品</el-radio>
                <el-radio label="2">零部件</el-radio>
            </el-radio-group>
            
            <span style="color:red;"> 切换编码类型会清空已填编码！！！</span>
        </el-form-item>
        <!--物料明细-->
        <template v-for="(good,index) in ruleForm.goods">
            <hr />
            <el-form-item :label="'物料('+(index+1)+')'">
                <el-button v-on:click="deleteGood(index)" v-if="index>0"
                           type="danger" style="float:right;" plain>
                    删除
                </el-button>
            </el-form-item>
            <br />

            <el-form-item label="物料大类" :rules="{ required: true, message: '物料大类不能为空', trigger: 'blur'}"
                          :prop="'goods.' + index + '.BigCode'">
                <el-select v-model="good.BigCode" :data="index" filterable placeholder="请选择" v-on:change="changeBigCode" >
                    <el-option v-for="item in bigCodes"
                               :key="item.materialCodeNumber"
                               :label="item.materialName"
                               :value="item.materialCodeNumber">
                    </el-option>
                </el-select>
            </el-form-item>

            <el-form-item label="物料小类" :rules="{ required: true, message: '物料小类不能为空', trigger: 'blur'}"
                          :prop="'goods.' + index + '.SmallCode'">
                <el-select v-model="good.SmallCode" filterable placeholder="请选择" v-on:change="changeSmallCode">
                    <el-option v-for="item in good.smallMaterialCodes"
                               :key="item.materialCodeNumber"
                               :label="item.materialName"
                               :value="item.materialCodeNumber">
                    </el-option>
                </el-select>
            </el-form-item>

            <el-form-item v-for="(g,gk) in good" :key="gk" v-if="needInput.indexOf(gk) >=0 && meterielConfig[gk]"
                          :label="meterielConfig[gk]" :rules="{ required: true, message: meterielConfig[gk]+'不能为空', trigger: 'blur'}"
                          :prop="'goods.' + index + '.' + gk">
                <el-input v-model="good[gk]"></el-input>
            </el-form-item>

            <el-form-item v-for="(g,gk) in good" :key="gk" v-if="needInput.indexOf(gk) <0 && meterielConfig[gk]"
                          :label="meterielConfig[gk]">
                <el-input v-model="good[gk]"></el-input>
            </el-form-item>
        </template>
        <p class="hint">如需添加申请项，请点击“添加明细”</p>
        <el-button v-on:click="addGoods" type="primary" plain> + 添加明细</el-button>
        <hr />
        <!--添加审批人-->
        <sam-approver-list :nodeList="nodeList" :single="true" :nodedata="nodeInfo"></sam-approver-list>

        <el-form-item>
            <el-button type="primary" v-on:click="onSubmit('ruleForm')" :disabled="disablePage">提交</el-button>
            <el-button type="primary" v-on:click="saveTempData">临时保存</el-button>
        </el-form-item>
    </el-form>
</el-main>

<script>
    var meterielConfig = {
        //CodeNumber: '物料编码',
        Name: '物料名称',
        Unit: '单位',
        Standard: '型号规格',
        SurfaceTreatment: '表面处理',
        PerformanceLevel: '性能等级',
        StandardNumber: '标准号',
        Features: '典型特征',
        purpose: '用途',
        Remark: '备注'
    }
    var meteriel = {}
    for (let m in meterielConfig) {
        meteriel[m] = ''
    }
    meteriel['SmallCode'] = []
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                nodeList: [],
                nodeInfo: {},
                meterielConfig: meterielConfig,
                meteriel: meteriel,
                needInput: ['BigCode', 'SmallCode', 'Name'],
                bigCodes: [],
                ruleForm: {
                    codeType: '1',
                    name: DingData.nickName,
                    remark: '',
                    Title: '物料编码申请',
                    goods: [_cloneObj(meteriel)]
                }
            }
        },
        methods: {
            onSubmit(formName) {
                var that = this
                that.approvalSubmit(formName, {
                    Title: that.ruleForm.Title,
                    Remark: that.ruleForm.remark
                }, this.bindAll)
            },
            bindAll(taskId) {
                var that = this
                var paramArr = []
                for (let p of this.ruleForm.goods) {
                    p.TaskId = taskId
                    paramArr.push(p)
                }
                console.log("物料申請批量保存 paramArr ")
                //console.log(JSON.stringify(paramArr))
                console.log(paramArr)
                $.ajax({
                    url: '/ItemCodeAdd/TableSave',
                    contentType: 'application/json; charset=utf-8',
                    type: 'POST',
                    dataType: "json",
                    data: JSON.stringify(paramArr),
                    success: function (data) {
                        console.log(data)
                        var alertStr = '物料编码审批提交成功'
                        if (data.errorCode != 0) alertStr = data.errorMessage
                        that.doneSubmit(alertStr)
                    }
                })
            },
            addGoods() {
                this.ruleForm.goods.push(_cloneObj(meteriel))
            },
            deleteGood(index) {
                this.ruleForm.goods.splice(index, 1)
            },
            //切换编码类型
            changeCodeType(e) {
                console.log(e)
                this.getMaterielCode()
                this.ruleForm.goods = []
                this.ruleForm.goods.push(_cloneObj(meteriel))
            },
            //获取物料编码
            getMaterielCode() {
                var that = this
                let url = ''
                this.ruleForm.codeType == '1' ? url = jinDomarn + 'OfficeSupply/ReadType' : url = '/ItemCodeAdd/GetAllMaterialCode'
                this._getData(url, function (res) {
                    that.bigCodes = res.data
                    that.loadReApprovalData()
                })
            },
            //选择大类获取小类
            changeBigCode(bigCode, e) {
                //console.log(bigCode)
                for (let g of this.ruleForm.goods) {
                    if (g.BigCode == bigCode) {
                        for (let c of this.bigCodes) {
                            if (c.materialCodeNumber == bigCode) {
                                g.smallMaterialCodes = c.smallMaterialCodes
                            }
                        }
                    }
                }
            },
            //选择大类清除小类
            clearSmallCode(index, bigCode) {
                console.log(index)
                console.log(bigCode)
                this.ruleForm.goods[index].SmallCode = ''
                this.ruleForm.goods[index].smallMaterialCodes = []
            },
            //选择小类
            changeSmallCode() {
                let a = this.ruleForm.goods[0].Remark
                this.ruleForm.goods[0].Remark = Math.random() + ''
                this.ruleForm.goods[0].Remark = a
            },
            //加载重新发起审批传递的数据
            loadReApprovalData() {
                if (!ReApprovalTempData.valid) return
                ReApprovalTempData.valid = false
                //let datas = []
                for (let d of ReApprovalTempData.data) {
                    for (let a of this.bigCodes) {
                        if (d.BigCode == a.materialCodeNumber) {
                            d['smallMaterialCodes'] = a.smallMaterialCodes
                        }
                    }
                }
                this.ruleForm.goods = ReApprovalTempData.data
            },
            //显示临时保存数据
            saveTempData() {
                setLocalObj('materiel', this.ruleForm.goods)
                this.elementAlert('提示信息', '保存成功')
            },
        },
        created: function () {
            var that = this
            this.getNodeInfo()
            this.getApproInfo()
            this.getMaterielCode()

            loadHtml("mainPage", "partPage")
        }
    })

</script>
