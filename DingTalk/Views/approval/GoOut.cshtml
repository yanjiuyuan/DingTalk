@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        外出申请-{{nodeInfo.NodeName}}
    </div>

    <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="120px" class="demo-ruleForm">
        <el-form-item label="标题" prop="Title">
            <el-input v-model="ruleForm.Title"></el-input>
        </el-form-item>
        <el-form-item label="申请人">
            <el-input v-model="applyMan" style="width:200px;" :disabled="true"></el-input>
        </el-form-item>
        <el-form-item label="同行人">
            <el-input v-model="ruleForm.EvectionMan" style="width:500px;" :disabled="true"></el-input>
            <el-button class="button-new-tag" size="small" v-on:click="addPeerNumber()">+ 选人</el-button>
        </el-form-item>
        <el-form-item label="外出地点" prop="Place">
            <el-input type="textarea" v-model="ruleForm.Place" :value="placeStr" style="width:400px;" :disabled="true"></el-input>
            <el-button type="primary" v-on:click="dialogFormVisible = true">添加地点</el-button>
            <el-button type="danger" v-on:click="removePlace">删除地点</el-button>
        </el-form-item>
        <el-form-item label="外出事由" prop="Content">
            <el-input v-model="ruleForm.Content" style="width:550px;"></el-input>
        </el-form-item>
        <el-form-item label="外出时间" prop="BeginTime">
            <el-date-picker v-model="timeRange"
                            type="datetimerange"
                            v-on:change="selectTime" :editable="false"
                            range-separator="至"
                            start-placeholder="开始时间"
                            end-placeholder="返回时间">
            </el-date-picker>
        </el-form-item>
        <el-form-item label="时长/小时" prop="Duration">
            <el-input v-model="ruleForm.Duration" style="width:200px;"></el-input>
        </el-form-item>
        <el-form-item label="上传相关文件">
            <el-upload class="upload-demo"
                       drag
                       :file-list="fileList"
                       action="/drawingupload/Upload"
                       :on-remove="HandleFileRemove"
                       :before-upload="BeforeFileUpload"
                       :on-success="HandleFileSuccess"
                       multiple>
                <i class="el-icon-upload"></i>
                <div class="el-upload__text">将文件拖到此处，或<em>点击上传</em></div>
                <div class="el-upload__tip" slot="tip">不超过30M</div>
            </el-upload>
        </el-form-item>
        <hr />
        <!--添加审批人-->
        <sam-approver-list :nodeList="nodeList" :single="true" :nodedata="nodeInfo"></sam-approver-list>
        <el-form-item>
            <el-button type="primary" v-on:click="onSubmit('ruleForm')" :disabled="disablePage">提交</el-button>
            <el-button type="primary" v-on:click="saveTempData">临时保存</el-button>
        </el-form-item>
    </el-form>

    <el-dialog title="添加外出地点" :visible.sync="dialogFormVisible">
        <el-form :model="form" :rules="rules" ref="form">
            <el-form-item label="外出地点" prop="Place" >
                <el-input v-model="form.Place" autocomplete="off"></el-input>
            </el-form-item>
        </el-form>
        <div slot="footer" class="dialog-footer">
            <el-button v-on:click="dialogFormVisible = false">取 消</el-button>
            <el-button type="primary" v-on:click="addPlace('form')">确 定</el-button>
        </div>
    </el-dialog>


</el-main>

<script>
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                applyMan: DingData.nickName,
                nodeList: [],
                nodeInfo: {},
                timeRange: [],
                placeArr: [],
                placeStr: '',
                date: _getDate(),
                dialogFormVisible: false,
                ruleForm: {
                    Duration: "",
                    EvectionMan: '',
                    EvectionManId: '',
                    BeginTime: "",
                    EndTime: "",
                    Content: "",
                    Place: "",
                    LocationPlace: '',
                    Title: "外出申请"
                },
                form: {
                    Place: "",
                },
                rules: {
                    Content: [{ required: true, message: '外出事由不能为空', trigger: 'blur' },
                    { min: 0, max: 30, message: '长度在 30 个字符以内', trigger: 'blur' }
                    ],
                    Place: [{ required: true, message: '外出地点不能为空', trigger: 'blur' },
                    { min: 0, max: 30, message: '长度在 30 个字符以内', trigger: 'blur' }
                    ],
                    startAddress: [{ required: true, message: '始发地点不能为空', trigger: 'blur' },
                    { min: 0, max: 30, message: '长度在 30 个字符以内', trigger: 'blur' }
                    ],
                    BeginTime: [{ required: true, message: '外出时间不能为空', trigger: 'blur' },
                    { min: 0, max: 30, message: '长度在 30 个字符以内', trigger: 'blur' }
                    ],
                    Duration: [{ required: true, message: '外出时长不能为空', trigger: 'blur' },
                    { min: 0, max: 30, message: '长度在 30 个字符以内', trigger: 'blur' }
                    ],
                },
                dayPickerOptions: {
                    shortcuts: [
                        {
                            text: '今天',
                            onClick(picker) {
                                picker.$emit('pick', new Date());
                            }
                        }, {
                            text: '明天',
                            onClick(picker) {
                                const date = new Date();
                                date.setTime(date.getTime() + 3600 * 1000 * 24);
                                picker.$emit('pick', date);
                            }
                        }]
                }
            }
        },
        methods: {
            onSubmit(formName) {
                var that = this
                let url = '/Evection/Save'
                var param = _cloneObj(this.ruleForm)
                this.fileListToUrl()
                console.log(param)
                let callBack = function (taskId) {
                    param.TaskId = taskId
                    that._postData(url, function (data) {
                        that.$alert('恭喜提交成功', '提示信息', {
                            confirmButtonText: '确定',
                            callback: action => {
                                goHome()
                            }
                        })
                    }, param)
                }
                this.approvalSubmit(formName, {
                    Title: this.ruleForm.Title,
                    FileUrl: this.ruleForm.FileUrl,
                    MediaId: this.ruleForm.MediaId,
                    OldFileUrl: this.ruleForm.OldFileUrl }, callBack)
            },
            addPlace(formName) {
                this.$refs[formName].validate((valid) => {
                    if (valid) {
                        this.placeArr.push(this.form.Place)
                        this.ruleForm.Place = this.placeArr.join(',')
                        this.dialogFormVisible = false
                        this.form.Place = ''
                    }
                })
            },
            removePlace() {
                this.placeArr.pop()
                this.ruleForm.Place = this.placeArr.join(',')
            },
            //选时间操作
            selectTime(value) {
                if (!value[0]) return
                this.ruleForm.Duration = _computeDurTime(value[0], value[1], 'h')
                this.ruleForm.BeginTime = _timeToString(value[0])
                this.ruleForm.EndTime = _timeToString(value[1])
                console.log(this.ruleForm.BeginTime)
                console.log(this.ruleForm.EndTime)
                console.error(this.ruleForm.Duration)
            },
            // 添加同行人
            addPeerNumber() {
                var that = this
                DingTalkPC.biz.contact.choose({
                users: [],
                corpId: DingData.CorpId,
                max: 10,
                onSuccess: function (data) {
                    let names = []
                    let numbers = []
                    for (let d of data) {
                        names.push(d.name)
                        numbers.push(d.emplId)
                    }
                    that.ruleForm.EvectionMan = names.join(',')
                    that.ruleForm.EvectionManId = numbers.join(',')
                },
                onFail: function (err) { }
            });
        }
        },
        created: function () {
            this.getNodeInfo()
            this.getApproInfo()
            this.loadTempData()
            this.loadReApprovalData()
            loadHtml("mainPage", "partPage")
        }
    })
</script>



