@{
    Layout = null;
}
<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <div class="head-fixed" onclick="loadPage('/Main/Approval_list')">
        <i class="el-icon-arrow-left"></i>
        {{FlowName}}-{{nodeInfo.NodeName}}
    </div>

    <!--表格實體-->
    <el-table :data="tableData" stripe border>
        <el-table-column v-for="(value,key) in items" :prop="key" :label="value" :key="key">
        </el-table-column>
    </el-table>
    <!--底部翻頁-->
    <div style="text-align:right">
        <el-pagination v-on:size-change="handleSizeChange"
                       v-on:current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-sizes="[1, 3, 5, 10]"
                       :page-size="5"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="totalRows">
        </el-pagination>
    </div>
    <el-form v-on:submit.native.prevent :model="ruleForm" :rules="rules" ref="ruleForm" label-width="150px" class="demo-ruleForm"
             id="uploadForm" enctype="multipart/form-data">
        <el-form-item label="预计总价">
            <el-input v-model="totalPrice" :disabled="true"></el-input>
        </el-form-item>
        <el-form-item label="标题" v-if="ruleForm.Title">
            <el-input v-model="ruleForm.Title" :disabled="true"></el-input>
        </el-form-item>
        <el-form-item label="申请人">
            <el-input v-model="ruleForm.ApplyMan" :disabled="true"></el-input>
        </el-form-item>
        <el-form-item label="备注">
            <el-input v-model="ruleForm.Remark" :disabled="true"></el-input>
        </el-form-item>
        <!--添加审批人-->
        <sam-approver-list :nodeList="nodeList" :single="true" :nodedata="nodeInfo"></sam-approver-list>
        <template v-if="index==0">
            <el-form-item label="审批意见" prop="mark">
                <el-input v-model="ruleForm.mark"></el-input>
            </el-form-item>
            <el-form-item>
                <el-button type="primary" v-on:click="onSubmit" :disabled="disablePage">同意</el-button>
                <el-button v-if="nodeInfo.IsBack" type="warning" v-on:click="returnBk" :disabled="disablePage">退回</el-button>
            </el-form-item>
        </template>
        <template v-if="index==2 &&( state=='被退回' || state=='已撤回')">
            <el-form-item>
                <el-button type="primary" v-on:click="reApproval" :disabled="disablePage">重新发起</el-button>
            </el-form-item>
        </template>
         <template v-if="index==2 && state=='未完成' && NodeId == '1'">
            <el-form-item>
                <ding :dinglist="dingList"></ding>
                <el-button type="warning" v-on:click="rebackSubmit" :disabled="disablePage">撤回</el-button>
            </el-form-item>
        </template>
        <template>
            <el-form-item>
                <el-button type="primary" v-on:click="printTable" v-if="state=='已完成'" :disabled="disablePage">打印表单</el-button>
                <el-button type="primary" v-on:click="printBom" :disabled="disablePage">导出Bom表</el-button>
            </el-form-item>
        </template>
    </el-form>


</el-main>
<script>
    var items = {
        CodeNo: '物料编码',
        Name: '物料名称',
        Standard: '规格型号',
        Unit: '单位',
        Count: '数量',
        Price: '单价(预计)',
        Purpose: '用途',
        UrgentDate: '需用日期',
        Mark: '备注'
    }
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                items: items,
                totalPrice: 0,
            }
        },
        methods: {
            //提交审批
            onSubmit(formName) {
                this.disablePage = true
                if (NodeId == 3) {
                    this.PostData('/OfficeSupplies/ModifyTable', this.data, (res) => {
                        this.aggreSubmit({
                            "Id": this.ruleForm.Id,
                            "Remark": this.ruleForm.mark
                        })

                    })
                }
                this.aggreSubmit({
                    "Id": this.ruleForm.Id,
                    "Remark": this.ruleForm.mark
                })
            },
            //获取bom表信息
            getBomInfo() {
                var that = this
                this.GetData("/PurchaseNew/ReadPurchaseTable?TaskId=" + TaskId, (data) => {
                    that.data = data
                    for (let p of data) {
                        this.totalPrice = this.totalPrice + p.Price * p.Count
                    }
                    that.getData()
                    that.totalRows = that.data.length
                })
            },
            //设置BOM表单状态
            setState(index, row) {
                row.IsDelete = !row.IsDelete
            },
            printTable() {
                this.PostData('PurchaseNew/PrintAndSend',{
                    UserId: DingData.userid,
                    TaskId: TaskId
                }, () => { this.elementAlert('提示信息','获取成功，请在工作通知中查收') })
            },
            printBom() {
                this.GetData('PurchaseNew/PrintExcel' + _formatQueryStr({
                    UserId: DingData.userid,
                    TaskId: TaskId
                }), () => { this.elementAlert('提示信息', '获取成功，请在工作通知中查收') })
                //this.PostData('PurchaseNew/PrintExcel', {
                //    UserId: DingData.userid,
                //    TaskId: TaskId
                //}, () => { this.elementAlert('提示信息', '获取成功，请在工作通知中查收') })
            }
        },
        created: function () {
            this.initEnd(() => { this.getBomInfo() })
        }
    })
</script>
